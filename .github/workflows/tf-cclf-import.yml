name: tf-cclf-import
run-name: tf-cclf-import ${{ (inputs.apply || (github.event_name == 'push' && github.ref == 'refs/heads/main') || github.event_name == 'schedule') && 'apply' || 'plan' }}

on:
  push:
    paths:
      - .github/workflows/tf-cclf-import.yml
      - terraform/modules/bucket/**
      - terraform/modules/key/**
      - terraform/modules/function/**
      - terraform/modules/queue/**
      - terraform/modules/subnets/**
      - terraform/modules/vpc/**
      - terraform/services/cclf-import/**
  schedule:
    - cron: "12 14 * * 1-5"
  workflow_dispatch:
    inputs:
      apply:
        required: false
        type: boolean

env:
  TENV_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

defaults:
  run:
    working-directory: ./terraform/services/cclf-import

jobs:
  check-fmt:
    runs-on: codebuild-cdap-${{github.run_id}}-${{github.run_attempt}}
    steps:
      - uses: actions/checkout@v4
      - uses: sigstore/cosign-installer@d58896d6a1865668819e1d91763c7751a165e159 # v3.9.2
      - uses: cmsgov/cdap/actions/setup-tenv@8343fb96563ce4b74c4dececee9b268f42bd4a40
      - run: tofu fmt -check -diff -recursive .

  plan-apply:
    needs: check-fmt
    permissions:
      contents: read
      id-token: write
    runs-on: codebuild-cdap-${{github.run_id}}-${{github.run_attempt}}
    strategy:
      fail-fast: false
      matrix:
        app: [bcda]
        env: [dev, test, prod]
    steps:
      - uses: actions/checkout@v4
      - uses: sigstore/cosign-installer@d58896d6a1865668819e1d91763c7751a165e159 # v3.9.2
      - uses: cmsgov/cdap/actions/setup-tenv@8343fb96563ce4b74c4dececee9b268f42bd4a40
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ contains(fromJSON('["dev", "test"]'), matrix.env) && secrets.NON_PROD_ACCOUNT || secrets.PROD_ACCOUNT }}:role/delegatedadmin/developer/${{ matrix.app }}-${{ matrix.env }}-github-actions
          aws-region: ${{ vars.AWS_REGION }}
      - run: tofu init -backend-config=../../backends/${{ matrix.app }}-${{ matrix.env }}.s3.tfbackend
      - run: tofu plan -out=tf.plan
        env:
          TF_VAR_app: ${{ matrix.app }}
          TF_VAR_env: ${{ matrix.env }}
      - if: inputs.apply || (github.event_name == 'push' && github.ref == 'refs/heads/main') || github.event_name == 'schedule'
        run: tofu apply -auto-approve tf.plan
