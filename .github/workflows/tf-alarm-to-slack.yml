name: tf-alarm-to-slack
run-name: tf-alarm-to-slack ${{ (inputs.apply || (github.event_name == 'push' && github.ref == 'refs/heads/main')) && 'apply' || 'plan' }}

on:
  push:
    paths:
      - .github/workflows/tf-alarm-to-slack.yml
      - terraform/modules/bucket/**
      - terraform/modules/key/**
      - terraform/modules/function/**
      - terraform/modules/queue/**
      - terraform/modules/subnets/**
      - terraform/modules/vpc/**
      - terraform/services/alarm-to-slack/**
  workflow_dispatch:
    inputs:
      apply:
        required: false
        type: boolean

jobs:
  check-fmt:
    runs-on: codebuild-cdap-${{github.run_id}}-${{github.run_attempt}}
    steps:
      - uses: actions/checkout@v4
      - uses: ./actions/setup-tfenv-terraform
      - run: terraform fmt -check -diff -recursive terraform/services/alarm-to-slack

  plan-apply-deploy:
    needs: check-fmt
    permissions:
      contents: read
      id-token: write
    runs-on: codebuild-cdap-${{github.run_id}}-${{github.run_attempt}}
    defaults:
      run:
        working-directory: ./terraform/services/alarm-to-slack
    strategy:
      fail-fast: false
      matrix:
        app: [dpc]
        env: [dev, test, sandbox, prod]
    steps:
      - uses: actions/checkout@v4
      - run: |
          pip install pylint pytest
          pylint lambda_src
          pytest lambda_src
      - uses: ./actions/setup-tfenv-terraform
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ contains(fromJSON('["dev", "test"]'), matrix.env) && secrets.NON_PROD_ACCOUNT || secrets.PROD_ACCOUNT }}:role/delegatedadmin/developer/${{ matrix.app }}-${{ matrix.env }}-github-actions
          aws-region: ${{ vars.AWS_REGION }}
      - run: terraform init -backend-config=../../backends/${{ matrix.app }}-${{ matrix.env }}-gf.s3.tfbackend
      - run: terraform plan -out=tf.plan
        env:
          TF_VAR_app: ${{ matrix.app }}
          TF_VAR_env: ${{ matrix.env }}
          TF_VAR_legacy: "false"
      - if: inputs.apply || (github.event_name == 'push' && github.ref == 'refs/heads/main')
        run: |
          terraform apply -auto-approve tf.plan
          cd lambda_src
          zip deploy.zip lambda_function.py
          aws lambda update-function-code --function-name "${{ matrix.app }}-${{ matrix.env }}-alarm-to-slack" --zip-file fileb://deploy.zip
